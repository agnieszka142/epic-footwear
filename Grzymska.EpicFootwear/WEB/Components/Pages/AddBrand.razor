@page "/brands/add"
@page "/brands/edit/{id:int}"

@using Grzymska.EpicFootwear.Interfaces
@using Grzymska.EpicFootwear.WEB.Models

@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@if (Brand == null)
{
    <p><em>Loading...</em></p>
}
else
{  
    <div class="container" style="margin-top: 100px;">
        <h3>Add new brand</h3>

        <div class="form-group">
            <label for="Name">Name</label>
            <input type="text" class="form-control" @bind="Brand.Name" />
        </div>

        <div class="form-group">
            <label for="Country">Country</label>
            <input type="text" class="form-control" @bind="Brand.Country" />
        </div>

        <div class="form-group">
            <label for="Founded">Year of foundation</label>
            <input type="text" class="form-control" @bind="Brand.Founded" />
        </div>

        <div class="button-group">
            <button class="btn btn-primary" @onclick="SaveBrand">Submit</button>
            <button class="btn btn-secondary" @onclick='() => NavigationManager.NavigateTo("/brands")'>Cancel</button>
        </div>
    </div>
}

@code {
    private IBrand Brand { get; set; }
    private bool IsEditMode { get; set; }

    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IsEditMode = NavigationManager.Uri.Contains("/brands/edit");

        if (IsEditMode)
        {
            await GetBrandFromUrl();
        }
        else
        {
            await GetNewBrand();
        }
    }

    private async Task GetBrandFromUrl()
    {
        Brand = await httpClient.GetFromJsonAsync<Brand>($"https://localhost:7209/api/brands/{id}");
    }

    private async Task GetNewBrand()
    {
        Brand = await httpClient.GetFromJsonAsync<Brand>("https://localhost:7209/api/brands/new");
    }

    private async Task SaveBrand()
    {
        await httpClient.PostAsJsonAsync<Brand>("https://localhost:7209/api/brands", (Brand)Brand);

        NavigationManager.NavigateTo("/brands");
    }
}
